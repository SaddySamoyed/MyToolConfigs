set fish_greeting
echo "üêü Welcome back, QL! Hail to the Elden Lord! "

function fish_prompt
    echo -n (prompt_pwd) ' ‚ñ∂ '
end

if test -n "$WSL_DISTRO_NAME"
    echo "Running in WSL: $WSL_DISTRO_NAME"
end
if status is-interactive
    # Commands to run in interactive sessions can go here
end


function accept_or_expand --description "Smart Tab: expand on first, accept on second"
    set cursor_pos (commandline -C)
    set current_buffer (commandline)
    set before_cursor (string sub -l $cursor_pos -- $current_buffer)

    if test "$before_cursor" = "$__last_tab_buffer"
        # Á¨¨‰∫åÊ¨° TabÔºåÁõ¥Êé•Êé•ÂèóË°•ÂÖ®Âª∫ËÆÆ
        commandline -f accept-autosuggestion
    else
        # Á¨¨‰∏ÄÊ¨° TabÔºåÊòæÁ§∫ÂÄôÈÄâÈ°π
        set -g __last_tab_buffer $before_cursor
        commandline -f complete
    end
end

# Âº∫Âà∂ Tab Âè™Êé•ÂèóËá™Âä®Ë°•ÂÖ®Ôºå‰∏çÂæ™ÁéØÂÄôÈÄâÈ°π
bind \t accept_or_expand

# control+c -> undo
bind \cz undo


# ===============================
# Sublime Text CLI Ê∑ªÂä†Âà∞ PATH
# ===============================
set -gx PATH "/Applications/Sublime Text.app/Contents/SharedSupport/bin" $PATH

# ===============================
# Conda ÂàùÂßãÂåñÔºàfish ÁâàÊú¨Ôºâ
# ===============================
set -gx PATH /home/rynne/miniconda3/bin $PATH
set -Ux CONDA_EXE /home/rynne/miniconda3/bin/conda
set -Ux _CONDA_ROOT /home/rynne/miniconda3
set -Ux CONDA_SHLVL 0
set -Ux CONDA_PREFIX ""
set -Ux CONDA_DEFAULT_ENV ""
set -Ux CONDA_PROMPT_MODIFIER ""
# Ê∑ªÂä† conda ÂàùÂßãÂåñËÑöÊú¨Âà∞ config.fish
echo 'source /home/rynne/miniconda3/etc/fish/conf.d/conda.fish' >> ~/.config/fish/config.fish
eval (/home/rynne/miniconda3/bin/conda shell.fish hook)


# ===============================
# alias
# ===============================
alias ls='ls -G'

# ===============================
# Emacs Âø´Êç∑ÂáΩÊï∞
# ===============================
function e
    command emacs $argv &
end




function emoji
    if test $status -ne 0
        printf "\U0001F972\n"
    else
        printf "\U0001F600\n"
    end
end

function fish_prompt
    set emoji_output (emoji)
    set_color green
    echo -n "$emoji_output" "[$USER] "
    set_color blue
    echo -n (prompt_pwd)
    set_color normal
    echo -n " \$ "
end

set -gx CXX /usr/bin/g++-13
set -gx CC /usr/bin/gcc-13
function g++ --wraps g++-13
    command g++-13 $argv
end

function gcc --wraps gcc-13
    command gcc-13 $argv
end


source /home/rynne/miniconda3/etc/fish/conf.d/conda.fish